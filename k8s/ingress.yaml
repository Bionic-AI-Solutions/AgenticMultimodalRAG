apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rag-app-ingress
  namespace: rag-system
  labels:
    app.kubernetes.io/name: agentic-multimodal-rag
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  rules:
  - host: rag-app.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rag-app-internal
            port:
              number: 8000
  - host: rag-api.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rag-app-internal
            port:
              number: 8000
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rag-app-internal
            port:
              number: 8000
